{"version":1698883200000,"changes":[{"timestamp":1702265517502,"collection":"pages","objectPk":"nextui.org/docs/guide/routing","operation":"create","object":{"url":"nextui.org/docs/guide/routing","fullUrl":"https://nextui.org/docs/guide/routing","domain":"nextui.org","hostname":"nextui.org","fullTitle":"Installation | NextUI - Beautiful, fast and modern React UI Library --- 安装| NextUI - 美丽、快速且现代的 React UI 库","text":" v2.2.9 Docs Components Blog Figma Introducing v2.2.0 open navigation menu Quick Search... K Sponsor open navigation menu Guide 指导 Introduction 介绍 Installation 安装 Design Principles 设计原则 Routing 路由 New Upgrade to v2 升级到v2 Frameworks 构架 Next.js Vite 维特 Remix 混音 Astro 阿斯特罗 Customization 定制化 Theme 主题 Layout 布局 Colors 颜色 Customize theme 自定义主题 Create theme 创建主题 Dark mode 深色模式 Override styles 覆盖样式 Custom variants 定制变体 Components 成分 Avatar 阿凡达 Accordion 手风琴 Autocomplete 自动完成 New Badge 徽章 Button 按钮 Breadcrumbs 面包屑 New Card 卡片 Checkbox 复选框 Checkbox Group 复选框组 Chip 芯片 Circular Progress 循环进展 Code 代码 Divider 分频器 Dropdown 落下 Updated 更新 Image 图像 Input 输入 Kbd Link 关联 Updated 更新 Listbox 列表框 Updated 更新 Modal 莫代尔 Navbar 导航栏 Pagination 分页 Popover 弹出窗口 Progress 进步 Radio Group 无线电集团 Select 选择 Skeleton 骨骼 Snippet 片段 Scroll Shadow 卷轴阴影 Spacer 垫片 Spinner 旋转器 Switch 转变 Slider 滑块 New Table 桌子 Tabs 选项卡 Updated 更新 Textarea 文本区 Updated 更新 Tooltip 工具提示 User 用户 Routing 路由 NextUI Components such as Tabs , Listbox , Dropdown and many others offer the flexibility to be rendered as HTML links. Explore this page to learn how to integrate them with client side routing. NextUI 组件 例如选项卡、列表框、下拉菜单和许多其他组件 提供了呈现为 HTML 链接的灵活性。浏览此页面以了解如何将它们与客户端路由集成。 Introduction 介绍 By default, links perform native browser navigation when they are interacted with. However, many apps and frameworks use client side routers to avoid a full page reload when navigating between pages. The NextUIProvider component configures all NextUI components within it to navigate using the client side router you provide. 默认情况下 链接在交互时执行本机浏览器导航。但是 许多应用程序和框架使用客户端路由器来避免在页面之间导航时重新加载整页。 NextUIProvider 组件配置其中的所有 NextUI 组件 以使用您提供的客户端路由器进行导航。 Set this up once in the root of your app, and any NextUI component with the href prop will automatically navigate using your router. 在应用程序的根目录中设置一次 任何带有 href 属性的 NextUI 组件都将使用您的路由器自动导航。 NextUIProvider Setup NextUIProvider 设置 The NextUIProvider accepts a prop called navigate. This should be set to a function received from your router for performing a client side navigation programmatically. The following example shows the general pattern. Framework-specific examples are shown below. NextUIProvider 接受一个名为 navigate 的属性。这应该设置为从路由器接收的函数 用于以编程方式执行客户端导航。以下示例显示了一般模式。下面显示了特定于框架的示例。 import * as React from \"react\" ; // 1. import `NextUIProvider` component import { NextUIProvider } from \"@nextui-org/react\" ; function App ( ) { const navigate = useNavigateFromYourRouter ( ) ; // 2. Add the `navigate` function to the `NextUIProvider` return ( < NextUIProvider navigate = { navigate } > < YourApplication /> </ NextUIProvider > ) ; } Next.js App Router 应用路由器 Go to your app/providers.tsx or app/providers.jsx (create it if it doesn't exist) and add the useRouter hook from next/navigation, it returns a router object that can be used to perform navigation. 转到您的 app/providers.tsx 或 app/providers.jsx 如果不存在则创建它 并从 next/navigation 添加 useRouter 钩子 它返回可用于执行导航的路由器对象。 Add the 添加 useRouter // app/providers.tsx 'use client' import { NextUIProvider } from '@nextui-org/react' ; import { useRouter } from 'next/navigation' export function Providers ( { children } : { children : React . ReactNode } ) { const router = useRouter ( ) ; return ( < NextUIProvider navigate = { router . push } > { children } </ NextUIProvider > ) } Add Provider to Root 将提供者添加到根目录 Now, Go to your root layout page and wrap it with the NextUIProvider: 现在 转到 root 布局页面并用 NextUIProvider 包裹它 // app/layout.tsx import { Providers } from \"./providers\" ; export default function RootLayout ( { children } : { children : React . ReactNode } ) { return ( < html lang = \" en \" className = ' dark ' > < body > < Providers > { children } </ Providers > </ body > </ html > ) ; } Note: Skip this step if you already set up the NextUIProvider in your app. 注意 如果您已在应用中设置 NextUIProvider 请跳过此步骤。 Pages Router 页面路由器 Go to pages /_app.js or pages/_app.tsx (create it if it doesn't exist) and add the useRouter hook from next/router, it returns a router object that can be used to perform navigation. 转到页面 /_app.js 或 pages/_app.tsx 如果不存在则创建它 并从 next/router 添加 useRouter 钩子 它返回可用于执行导航的路由器对象。 // pages/_app.tsx import type { AppProps } from 'next/app' ; import { NextUIProvider } from '@nextui-org/react' ; import { useRouter } from 'next/router' ; function MyApp ( { Component , pageProps } : AppProps ) { const router = useRouter ( ) ; return ( < NextUIProvider navigate = { router . push } > < Component { ... pageProps } /> </ NextUIProvider > ) } export default MyApp ; React Router 反应路由器 The useNavigate hook from react-router-dom returns a navigate function that can be used to perform navigation. react-router-dom 中的 useNavigate 挂钩返回可用于执行导航的 navigate 函数。 Go to the App file commonly called App.jsx or App.tsx, add the useNavigate hook and pass the navigate function to the NextUIProvider: 转到通常称为 App.jsx 或 App.tsx 的 App 文件 添加 useNavigate 挂钩并传递 navigate 函数到 NextUIProvider // App.tsx or App.jsx import { BrowserRouter , useNavigate } from 'react-router-dom' ; import { NextUIProvider } from '@nextui-org/react' ; function App ( ) { const navigate = useNavigate ( ) ; return ( < NextUIProvider navigate = { navigate } > { /* Your app here... */ } < Routes > < Route path = \" / \" element = { < HomePage /> } /> { /* ... */ } </ Routes > </ NextUIProvider > ) ; } // main.tsx or main.jsx ReactDOM . createRoot ( document . getElementById ( 'root' ) ) . render ( < React.StrictMode > < BrowserRouter > < App /> </ BrowserRouter > </ React.StrictMode > , ) Ensure that the component that calls useNavigate and renders NextUIProvider is inside the router component (e.g. BrowserRouter) so that it has access to React Router's internal context. The React Router <Routes> element should also be defined inside NextUIProvider so that links inside the rendered routes have access to the router. 确保调用 useNavigate 并渲染 NextUIProvider 的组件位于路由器组件内部 例如 BrowserRouter 以便它可以访问 React Router 的内部上下文。 React Router <Routes> 元素也应该在 NextUIProvider 内部定义 以便渲染路由内的链接可以访问路由器。 Remix 混音 Remix uses React Router under the hood, so the same useNavigate hook described above also works in Remix apps. NextUIProvider should be rendered at the root of each page that includes NextUI components, or in app/root.tsx to add it to all pages. See the Remix docs for more details. Remix 在底层使用 React Router 因此上面描述的相同 useNavigate 钩子也适用于 Remix 应用程序。 NextUIProvider 应呈现在包含 NextUI 组件的每个页面的 root 处 或者呈现在 app/root.tsx 中以将其添加到所有页面。有关更多详细信息 请参阅 Remix 文档。 // app/root.tsx import { useNavigate , Outlet } from '@remix-run/react' ; import { NextUIProvider } from '@nextui-org/react' ; export default function App ( ) { const navigate = useNavigate ( ) ; return ( < html lang = \" en \" > < head > { /* ... */ } </ head > < body > < NextUIProvider navigate = { navigate } > < Outlet /> </ NextUIProvider > { /* ... */ } </ body > </ html > ) ; } Usage examples 使用示例 Now that you have set up the NextUIProvider in your app, you can use the href prop in the Tabs, Listbox and Dropdown items to navigate between pages. 现在您已经在应用中设置了 NextUIProvider 您可以在 Tabs 、 Listbox 和 Dropdown 项目在页面之间导航。 The Link component will also use the navigate function from the NextUIProvider to navigate between pages. Link 组件还将使用 NextUIProvider 中的 navigate 函数在页面之间导航。 import { Tabs , Tab , Listbox , ListboxItem , Dropdown , DropdownTrigger , DropdownMenu , DropdownItem , Button , Link , } from \"@nextui-org/react\" ; function App ( ) { return ( < > < Tabs aria-label = \" Navigation \" > < Tab key = \" home \" href = \" /home \" > Home </ Tab > < Tab key = \" about \" href = \" /about \" > About </ Tab > </ Tabs > < Listbox aria-label = \" Navigation \" > < ListboxItem key = \" home \" href = \" /home \" > Home </ ListboxItem > < ListboxItem key = \" about \" href = \" /about \" > About </ ListboxItem > </ Listbox > < Dropdown > < DropdownTrigger > < Button > Open </ Button > </ DropdownTrigger > < DropdownMenu aria-label = \" Navigation \" > < DropdownItem key = \" home \" href = \" /home \" > Home </ DropdownItem > < DropdownItem key = \" about \" href = \" /about \" > About </ DropdownItem > </ DropdownMenu > </ Dropdown > < Link href = \" /home \" > Home </ Link > < Link href = \" /about \" > About </ Link > </ > ) ; } Design Principles 设计原则 Upgrade to v2 升级到v2 Edit this page on GitHub On this page 在本页 Introduction 介绍 NextUIProvider Setup NextUIProvider 设置 Next.js App Router 应用路由器 Add the `useRouter` 添加`useRouter` Add Provider to Root 将提供者添加到根目录 Pages Router 页面路由器 React Router 反应路由器 Remix 混音 Usage examples 使用示例 Back to top 回到顶部 © 2023 NextUI Inc. © 2023 NextUI Inc. 版权所有 Deployed on 部署于 ","urlTerms":["docs","guide","routing"],"titleTerms":["installation","nextui","beautiful","fast","and","modern","react","ui","library","安","装","美","丽","、","快","速","且","现","代","的","库"]}},{"timestamp":1702265517560,"collection":"pageListEntries","objectPk":[20201014,"nextui.org/docs/guide/routing"],"operation":"create","object":{"listId":20201014,"pageUrl":"nextui.org/docs/guide/routing","fullUrl":"https://nextui.org/docs/guide/routing","createdAt":"2023-12-11T03:31:57.548Z"}},{"timestamp":1702265517587,"collection":"visits","objectPk":[1702265517583,"nextui.org/docs/guide/routing"],"operation":"create","object":{"url":"nextui.org/docs/guide/routing","time":1702265517583}},{"timestamp":1702265517633,"collection":"annotations","objectPk":"nextui.org/docs/guide/routing/#1702265517002","operation":"create","object":{}},{"timestamp":1702265517711,"collection":"sharedAnnotationMetadata","objectPk":"nextui.org/docs/guide/routing/#1702265517002","operation":"create","object":{}},{"timestamp":1702265517797,"collection":"sharedAnnotationMetadata","objectPk":"nextui.org/docs/guide/routing/#1702265517002","operation":"update","object":{}},{"timestamp":1702265524230,"collection":"sharedAnnotationMetadata","objectPk":"nextui.org/docs/guide/routing/#1702265517002","operation":"delete","object":{}},{"timestamp":1702265524259,"collection":"annotationPrivacyLevels","objectPk":14,"operation":"delete","object":{}},{"timestamp":1702265524283,"collection":"annotations","objectPk":"nextui.org/docs/guide/routing/#1702265517002","operation":"delete","object":{}}],"syncKey":"um80k63tuhleqpjnh6s7uv","backupPath":"/Users/admin/Desktop/ObsidianVault/backup"}